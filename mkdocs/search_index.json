{
    "docs": [
        {
            "location": "/", 
            "text": "Projekt Dokumentation Francke AudioGuide-v2\n\n\n[insert here]\n\n\nErzeugt mit mkdocs (siehe \nHow To Docs\n)", 
            "title": "Home"
        }, 
        {
            "location": "/#projekt-dokumentation-francke-audioguide-v2", 
            "text": "[insert here]  Erzeugt mit mkdocs (siehe  How To Docs )", 
            "title": "Projekt Dokumentation Francke AudioGuide-v2"
        }, 
        {
            "location": "/app/", 
            "text": "Software Struktur\n\n\nReact\n\n\nReact wird genutzt um das User Interface zu rendern. React nutzt dabei Komponenten (components):\n\n\nEinzelne Komponenten sollten m\u00f6glichst wenig bis keine Applikations-Logik bzw. State besitzen. Maximal States die notwendig zum Rendern des Interfaces sind bzw. verschiedene Zust\u00e4nde in denen sich das Interface befinden kann: Beispielsweise kann ein Men\u00fc auf- oder zugeklappt sein.\n\n\n\n\nDokumentation React\n\n\nIntro Video zu React / 7min\n\n\n\n\nDer Source Code der App befindet sich in \nsrc/js\n\n\nDie User Interface Komponenten befinden sich in \nsrc/js/components\n\n\nDie Haupt Komponente f\u00fcr die App befindet sich in \nsrc/js/components/App.js\n\n\nReact Motion\n\n\n\n\nReact Motion ist eine React Library und wird in der App gr\u00f6\u00dftenteils f\u00fcr die Animationen verwendet.\n\n\n\n\nReact Motion Doku auf Github\n\n\n\n\nCode Beispiel:\n\n\nvar isActive = true;\n\nrender (\n    \nMotion style={{\n            alpha: spring(isActive ? 1 : 0)\n        }}\n    \n\n    {\n        ({ alpha }) =\n\n            \ndiv style={{\n                opacity: alpha\n                }}\n\n            Hallo Welt\n            \n/div\n\n    }\n    \n/Motion\n\n)\n\n\n\n\nRedux\n\n\nRedux wird f\u00fcr die Logik und den App-State verwendet.\nRedux wird in \nsrc/js/client.js\n und \nsrc/js/store.js\n initialisiert.\n\n\nReducer\n\n\nReducer werden in \nsrc/js/reducers/index.js\n initialisiert.\nReducer beinhalten die Logik f\u00fcr die \u00dcbersetzung einer \"Action\" in einen neuen \"State\".\n\n\nBeispielsweise f\u00fcr die Action \nSHOW_INFO\n wird ein Payload mit einem Text String \u00fcbergeben. Diese Action wird in infoReducers.js abgefangen und in einen neuen State \u00fcbersetzt.\n\n\nACHTUNG\n: Der State selbst ist immutable! Das hei\u00dft er bzw. die Referenz darf nicht direkt ver\u00e4ndert werden. Es muss immer eine neue Kopie mit dem neuen State erzeugt werden! Dies geschieht in den meisten f\u00e4llen durch die ES6 Abk\u00fcrzung durch {... someObject} (Durch die drei Punkte werden die Daten des Objektes inline erweitert \nMehr Informationen zu Spread Operatoren\n). Wichtig ist auch, dass so von Kind-Objekten nicht automatisch Kopien erzeugt werden, sondern immernoch Referenzen auf das vorherige Objekt zeigen k\u00f6nnen.\n\n\nCode Beispiel:\n\n\nexport default function reducer(state={\n    info: { active: false, text: \n}\n}, action) {\n\n    switch (action.type)\n    {\n        case \nHIDE_INFO\n:{\n            return {...state, info:{\n                active:false,\n                text:\n\n            }\n        }};\n\n        case \nSHOW_INFO\n:{\n            const newInfoText = action.payload.text;\n            return {...state, info:{ active: true, text: newInfoText }}\n        }\n    }\n\n    return state\n}\n\n\n\n\nGenauso werden auch die Touren selektiert und die Kind-Elemente innerhalb einer Tour auf \nactive=true\n oder \nactive=false\n gesetzt. Die Logik hierf\u00fcr wurde jedoch aus tourReducer.js herausgetrennt und in tourReducerUtil.js geschrieben.\n\n\n\n\nRedux Doku auf Github", 
            "title": "App"
        }, 
        {
            "location": "/app/#software-struktur", 
            "text": "", 
            "title": "Software Struktur"
        }, 
        {
            "location": "/app/#react", 
            "text": "React wird genutzt um das User Interface zu rendern. React nutzt dabei Komponenten (components):  Einzelne Komponenten sollten m\u00f6glichst wenig bis keine Applikations-Logik bzw. State besitzen. Maximal States die notwendig zum Rendern des Interfaces sind bzw. verschiedene Zust\u00e4nde in denen sich das Interface befinden kann: Beispielsweise kann ein Men\u00fc auf- oder zugeklappt sein.   Dokumentation React  Intro Video zu React / 7min   Der Source Code der App befindet sich in  src/js  Die User Interface Komponenten befinden sich in  src/js/components  Die Haupt Komponente f\u00fcr die App befindet sich in  src/js/components/App.js", 
            "title": "React"
        }, 
        {
            "location": "/app/#react-motion", 
            "text": "", 
            "title": "React Motion"
        }, 
        {
            "location": "/app/#redux", 
            "text": "Redux wird f\u00fcr die Logik und den App-State verwendet.\nRedux wird in  src/js/client.js  und  src/js/store.js  initialisiert.", 
            "title": "Redux"
        }, 
        {
            "location": "/app/#reducer", 
            "text": "Reducer werden in  src/js/reducers/index.js  initialisiert.\nReducer beinhalten die Logik f\u00fcr die \u00dcbersetzung einer \"Action\" in einen neuen \"State\".  Beispielsweise f\u00fcr die Action  SHOW_INFO  wird ein Payload mit einem Text String \u00fcbergeben. Diese Action wird in infoReducers.js abgefangen und in einen neuen State \u00fcbersetzt.  ACHTUNG : Der State selbst ist immutable! Das hei\u00dft er bzw. die Referenz darf nicht direkt ver\u00e4ndert werden. Es muss immer eine neue Kopie mit dem neuen State erzeugt werden! Dies geschieht in den meisten f\u00e4llen durch die ES6 Abk\u00fcrzung durch {... someObject} (Durch die drei Punkte werden die Daten des Objektes inline erweitert  Mehr Informationen zu Spread Operatoren ). Wichtig ist auch, dass so von Kind-Objekten nicht automatisch Kopien erzeugt werden, sondern immernoch Referenzen auf das vorherige Objekt zeigen k\u00f6nnen.  Code Beispiel:  export default function reducer(state={\n    info: { active: false, text:  }\n}, action) {\n\n    switch (action.type)\n    {\n        case  HIDE_INFO :{\n            return {...state, info:{\n                active:false,\n                text: \n            }\n        }};\n\n        case  SHOW_INFO :{\n            const newInfoText = action.payload.text;\n            return {...state, info:{ active: true, text: newInfoText }}\n        }\n    }\n\n    return state\n}  Genauso werden auch die Touren selektiert und die Kind-Elemente innerhalb einer Tour auf  active=true  oder  active=false  gesetzt. Die Logik hierf\u00fcr wurde jedoch aus tourReducer.js herausgetrennt und in tourReducerUtil.js geschrieben.   Redux Doku auf Github", 
            "title": "Reducer"
        }, 
        {
            "location": "/data/", 
            "text": "Daten und Einstellungen\n\n\nDie Pfade zu den zu ladenden Daten werden aktuell in src/js/dataPaths.js gespeichert. Sollten die Pfade ge\u00e4ndert werden muss derzeit die Anwendung neu gebuildet werden.\n\n\nconfig.json\n\n\nHier werden Pfade zu SVG Grafiken und Texte f\u00fcr die UI Elemente und App Konfigurationen wie beispielsweise w\u00e4hlbare Sprachen hinterlegt. Die ID der Sprache wird innerhalb des \"ui\" Blockes als \nkey\n f\u00fcr die Texte verwendet.\n\n\n\n\n\"languages\" : [] - In der App angebotene Sprachen\n\n\n\"name\" : String - Name der Sprache. Wird unter dem Sprachauswahlbutton verwendet\n\n\n\"id\" : String - ID der Sprache. Wird als \nkey\n in \"ui\" f\u00fcr die Textwahl verwendet\n\n\n\n\n\n\n\n\nareas.json\n\n\nIn areas.json werden die Positionen und Dimensionen der Elemente auf der Karte und in den Geb\u00e4uden definiert. Sie ist so angelegt, dass F\u00fchrungen f\u00fcr mehrere verschiedene Orte abseits der Frankeschen Stiftungen angelegt werden k\u00f6nnen. F\u00fcr die App der Frankeschen Stiftung wird die Area mit dem Key \n\"frankesche_stiftung\"\n verwendet.\n\n\nF\u00fcr die Zuordnung von Tour Elementen (z.B. das Geb\u00e4ude \"Waisenhaus\" mit der id \"waisenhaus\") m\u00fcssen die ID in tours.json mit dem Key des Elements in areas.json \u00fcbereinstimmen. Der Name (\"name\") dient nur der eigenen erleichterten Zuordung.\n\n\nBeispiel aus areas.json:\n\n\n{\n    \nwaisenhaus\n: {\n        \nname\n: \nGeb\u00e4ude Waisenhaus\n,\n        \nboundingBox\n: {\n            \nleft\n: \n6.2317%\n,\n            \ntop\n: \n76.5919%\n,\n            \nwidth\n: \n10.918%\n,\n            \nheight\n: \n5.6255%\n\n        },\n        \nsvg\n: \n./assets/svg/waisenhaus/waisenhaus_aussen.svg\n,\n        \nfloor1\n: {\n            \nname\n: \n1. Stockwerk\n,\n            \nboundingBox\n: {\n                  \nleft\n: \n0%\n,\n                  \ntop\n: \n0%\n,\n                  \nwidth\n: \n100%\n,\n                  \nheight\n: \n100%\n\n            },\n            \nsvg\n : \n...\n\n        }\n    }\n}\n\n\n\n\nEntsprechend in tours.json:\n\n\n{\n    \ncontent\n: [\n        {\n            \nid\n: \nwaisenhaus\n\n            ...\n        }\n    ]\n}\n\n\n\n\nDie \nboundingBox\n Angaben beziehen sich immer relativ auf die Dimension des Elementes, in dem sie sich befinden.\n\n\nbeaconsConfig.json\n\n\nBeacons Config beschreibt allgemeine sowie individuelle Beacon Einstellungen f\u00fcr die Bluetooth Beacons.\n\n\n{\n  \nsettings\n: {\n    \nscanRegions\n: \nFDA50693-A4E2-4FB1-AFCF-C6EB07647825\n,\n    \nbeaconMinValues\n: 2,\n    \nbeaconMaxValues\n: 4,\n    \nbeaconMaxAge\n: 10\n  },\n  \nbeacons\n: {\n      \nFDA50693-A4E2-4FB1-AFCF-C6EB07647825:10:7\n: {\n        \ntriggerDistanceImmediate\n: -50,\n        \ntriggerDistanceInner\n: -60,\n        \ntriggerDistanceOuter\n: -67,\n        \nrssi\n: -59,\n        \ndescription\n: \nbeschreibung\n,\n        \nbatteryLife\n: 100,\n        \nboundingBox\n: {\n          \ntop\n: \n5%\n,\n          \nleft\n: \n8%\n,\n          \nwidth\n: \n20%\n,\n          \nheight\n: \n20%\n\n        }\n    }\n  }\n}\n\n\n\n\n\n\n\"settings\" : {} - Beinhaltet allgemeine Einstellungen die alle Beacons und den Beacon Scan betreffen.\n\n\n\"scanRegions\" : String - UUID der Scan Region f\u00fcr das Bluetooth Beacon Plugin (To Do: Ersetzen durch Array um mehrere Regionen zu erm\u00f6glichen.\n\n\n\"beaconMinValues\" : int - minimale RSSI Werte die je Beacon empfangen worden sein, bevor der Durchschnitt verwendet wird\n\n\n\"beaconMaxValues\" : int - maximale Anzahl an RSSI Werten, die gespeichert werden Sollten\n\n\n\"beaconMaxAge\" : int - Maximales Alter der RSSI Werte in Sekunden, bevor der Wert gel\u00f6scht wird\n\n\n\n\n\n\n\"beacons\" : {} - Beinhaltet die individuellen Beacon Einstellungen mit Trigger Werten mit einem Key  \nUUID:Major:Minor\n\n\n\"triggerDistanceInner\" : float - Regul\u00e4rer Trigger Wert. \u00dcberschreitet der RSSI Wert (Achtung negative Werte) den Inner Radius wird er ausgl\u00f6st sofern kein anderer bereits aktiver Beacon besteht.\n\n\n\"triggerDistanceOuter\" : float - Der Aktive Beacon bleibt solange Aktiv wie er diesen Wert \u00fcberschreitet\n\n\n\"triggerDistanceImmediate\" : float - \u00dcberschreitet der RSSI Wert (Achtung negative Werte) des Beacons triggerDistanceImmediate wird er sofort ausgel\u00f6st (Ausnahme: Ein anderer bereits aktiver Beacon \u00fcberschreitet bereits den f\u00fcr ihn definierten immediate Wert)\n\n\n\"rssi\" : int - Noch nicht implementiert - Su Fragen wof\u00fcr der Wert da ist\n\n\n\"description\" : String - Beschreibung des Standortes zur Zuordnung\n\n\n\"batteryLife\" : int - Aktueller Batteryzustand, wird noch nicht verwendet\n\n\n\"boundingBox\" : {} - Angaben zum Standort des Beacons im Raum (f\u00fcr die Darstellung im CMS und ggf. im Debug Overlay der App)\n\n\n\n\n\n\n\n\ntours.json\n\n\nTouren werden in tour.json gespeichert (\u00e4nderbar in src/js/dataPath, App muss jedoch neu gebuildet werden)\n\nJede Tour und jedes Element innerhalb der Tour ben\u00f6tigt eine einzigartige ID (\"id\" : String\n)\n\n\n\n\n\"tours\" : [] - Array aus Tour Objekten\n\n\n\"id\" : String - Unique Tour ID\n\n\n\"language\" : String - ID der Sprache der Tour (vgl. config.json \"languages\"). Dient dem Filtern der Touren f\u00fcr die Sprachen in der UI\n\n\n\"name\" : String - Titel der Tour\n\n\n\"duration\" : String - Dauer der Tour\n\n\n\"units\" : String - Zeitangabe (F\u00fcr die Aufsplittung im UI)\n\n\n\"description\" : String - Beschreibung der Tour\n\n\n\"beacons\" : {} : Enth\u00e4lt die f\u00fcr die Tour verwendeten Beacon UUID:Major:Minor Keys mit der ID des Elementes, welches sie aufrufen sollen\n\n\n\"FDA50693-A4E2-4FB1-AFCF-C6EB07647825:10:7\" : {} - Beacon UUID:Major:Minor Key\n\n\n\"elementID\": String - ID des Elementes, welches dieser Beacon ausl\u00f6st/\u00f6ffnet\n\n\n\n\n\n\n\n\n\n\n\"content\" : [] - Array aus Geb\u00e4ude Objekten die dieser Tour zugeordnet sind.\n\n\n\n\n\n\n\n\n{\n    \ntours\n: [\n        {\n            \nid\n: \ntour1\n,\n            \nlanguage\n: \nde\n,\n            \nname\n: \nHistorisches Waisenhaus\n,\n            \nduration\n: \n30\n,\n            \nunits\n: \nmin\n,\n            \ndescription\n: \nMit dem Bau des Halleschen Waisenhauses und der daran anschlie\u00dfenden Gesamtanlage rund um den heutigen Lindenhof hat sich August Hermann Francke in die Geschichte eingeschrieben. Innovationen in der Baukunst lie\u00dfen eine Architektursprache entstehen, die funktional, vielseitig nutzbar und wegweisend f\u00fcr die Entwicklung der Bildungs- und Sozialarchitektur war.\n,\n            \nbeacons\n: {\n                \nFDA50693-A4E2-4FB1-AFCF-C6EB07647825:10:7\n: {\n                    \nelementID\n: \nraum2\n\n                },\n                \nFDA50693-A4E2-4FB1-AFCF-C6EB07647825:20:2\n: {\n                    \nelementID\n: \nschrank\n\n                }\n            },\n            \ncontent\n: [\n                {}\n            ]\n        }\n    ]\n}\n\n\n\n\nInsgesamt werden die Inhalte der Tour-Struktur entsprechend ineinander verschachtelt. Die Struktur ist wie folgt:\n\n\n\n\nTour\n\n\nGeb\u00e4ude\n\n\nStockwerk\n\n\nRaum\n\n\nNavigationselement und/oder\n\n\nExponat\n\n\nKapitel\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nJedes Element muss \u00fcber einen \"content\" Key verf\u00fcgen, der ein Array an Objekten enth\u00e4lt.\n\n\n\"id\" : \"irgendeinObjekt\",\n\"content\" :\n[\n    {\n        ... Kind Element\n    }\n]\n\n\n\nDas Aufrufen und Aktivieren von Elementen wird durch ein Abgleichen der id mit dem gew\u00e4hlten Element gehandhabt.\n\n\nDefinition von Elementen in R\u00e4ume\n\n\nR\u00e4ume k\u00f6nnen Exponate oder Navigationselemente beinhalten. Exponate werden dargestellt durch die in der config.json f\u00fcr \"exhibit\" definierten SVG, wogegen die Darstellung von Navigationselementen frei und sogar optional ist. Sie k\u00f6nnen auch nur als unsichtbare Trigger dienen, um andere Elemente zu aktivieren, z.B. um den n\u00e4chsten oder vorherigen Raum aufzurufen oder das Stockwerk zu wechseln.\n\n\nExhibit\n\n\n\n\n\"type\" : \"exhibit\"\n - definiert ein Exponat, dargestellt durch einen Kreis\n\n\n\n\nBeispiel\n\n\n{\n  \"type\": \"exhibit\",\n  \"id\": \"schrank2\",\n  \"name\": \"Schrank2\",\n  \"previewImage\": \"assets/previews/schrank.png\",\n  \"content\": [\n    {\n      \"type\": \"chapter\",\n      \"id\": \"chapter3\",\n      \"title\": \"track0\",\n      \"audio\": \"./assets/track0.mp3\",\n      \"timeline\": [],\n      \"text\": \"Lorem...\"\n    }\n  ]\n}\n\n\n\nChapter\n\n\nGrunds\u00e4tzlich sollte jedes Exponat mindestens ein Kapitel beinhalten. Dabei gibt es zwei Typen:\n\n\n\n\n\"type\" : \"chapter\"\n - wird als regul\u00e4res Kapitel behandelt\n\n\n\"type\" : \"additional\"\n - markiert Zusatzinhalte\n\n\n\n\nBeispiel\n\n\n[\n    {\n      \"type\": \"chapter\",\n      \"id\": \"chapter1\",\n      \"title\": \"track0\",\n      \"audio\": \"./assets/track0.mp3\",\n      \"timeline\": [\n        {\n          \"from\": 0.2,\n          \"to\" : 0.5,\n          \"type\": \"image\",\n          \"src\" : \"./assets/Francke.jpg\"\n        }],\n      \"text\": \"Lorem...\"\n    },\n    {\n      \"type\": \"additional\",\n      \"id\": \"chapter2\",\n      \"title\": \"track1 (additional content)\",\n      \"audio\": \"./assets/track2.mp3\",\n      \"timeline\": [],\n      \"text\": \"Lorem...\"\n    }\n]\n\n\n\nNavigation\n\n\n\n\n\n\n\"type\" : \"navigation\"\n - definiert ein Navigationselement. Navigationselemente k\u00f6nnen durch anklicken/antippen nie direkt selbst aktiviert werden. Sie k\u00f6nnen nur die Aktivierung anderer Elemente ausl\u00f6sen, wenn \"activateOnClick\" mit einer existierenden ID definiert ist oder aktiv werden, wenn sie durch \"weiter\" oder \"zur\u00fcck\" aufgerufen werden und \"canBeActive\" nicht \nfalse\n ist.\n\n\n\n\n\"boundingBox\" : {}\n wird hier (im Gegensatz zu Exhibit Elementen) tourspefizisch definiert, da die Navigation je Tour unterschiedlich ausfallen kann (m\u00f6glicherweise w\u00e4re es sinnvoll eine boundingBox definition optional anzubieten, wenn es dann jeweils auch eine \"id\" gibt, die mit areas.json abgeglichen werden kann (im Falle von unsichtbaren Navigationselementen z.B., die f\u00fcr jede Tour gleich ist)\n\n\n\"top\" : String\n\n\n\"left\": String\n\n\n\"width\": String\n\n\n\"height\" : String\n\n\n\n\n\n\n\"svg\" : String\n - (optional) Pfad zu einer SVG Grafik die angezeigt werden soll\n\n\n\"activateOnClick\" : String\n - (optional) ID eines Elements welches bei einem Klick aktiviert werden soll (to do: rename)\n\n\n\"canBeActive\" : bool\n - (default: true) gibt an ob es bei \"weiter\" / \"zur\u00fcck\" aktiviert werden kann oder \u00fcbersprungen wird\n\n\n\"alwaysVisible\" : bool\n - (default: false) gibt an ob das Element immer sichtbar ist (sofern eine svg definiert wurde und der Raum aktiv ist)\n\n\n\"audio\" : String\n - (optional) erm\u00f6glicht das Abspielen einer Audio Datei ohne Media Player Overlay wenn das Element aktiv wird\n\n\n\n\n\n\n\n\nBeispiel\n\n\n{\n  \"type\": \"navigation\",\n  \"id\" : \"navigation2\",\n  \"svg\": \"./assets/svg/nav/nav_arrowLeft.svg\",\n  \"boundingBox\": {\n    \"top\": \"35%\",\n    \"left\": \"2%\",\n    \"width\": \"25%\",\n    \"height\": \"25%\"\n  },\n  \"activateOnClick\" : \"raum3\",\n  \"canBeActive\" : true,\n  \"alwaysVisible\" : false\n}\n\n\n\nM\u00f6gliche Backend L\u00f6sungen\n\n\n\n\nOpen Source Headless CMS: \nhttps://github.com/directus/directus\n\n\n\n\nAlternative Tour Struktur\n\n\nLineare Tour Struktur (Next Aktiviert einfach das \"n\u00e4chste\" Element im Array bzw. das Element in der Tour mit der \"elementID\")\n\n\n[\n    {\n        \nelementID\n : \nwaisenhaus\n\n    },\n    {\n        \nelementID\n : \nfloor1\n\n    },\n    {\n        \nelementID\n : \nraum1\n\n    },\n    {\n        \nelementID\n : \nexponat_1\n\n    },\n    {\n        \nelementID\n : \nraum2_in_haus3\n\n    },\n    {\n        ...\n    }\n]", 
            "title": "Data"
        }, 
        {
            "location": "/data/#daten-und-einstellungen", 
            "text": "Die Pfade zu den zu ladenden Daten werden aktuell in src/js/dataPaths.js gespeichert. Sollten die Pfade ge\u00e4ndert werden muss derzeit die Anwendung neu gebuildet werden.", 
            "title": "Daten und Einstellungen"
        }, 
        {
            "location": "/data/#configjson", 
            "text": "Hier werden Pfade zu SVG Grafiken und Texte f\u00fcr die UI Elemente und App Konfigurationen wie beispielsweise w\u00e4hlbare Sprachen hinterlegt. Die ID der Sprache wird innerhalb des \"ui\" Blockes als  key  f\u00fcr die Texte verwendet.   \"languages\" : [] - In der App angebotene Sprachen  \"name\" : String - Name der Sprache. Wird unter dem Sprachauswahlbutton verwendet  \"id\" : String - ID der Sprache. Wird als  key  in \"ui\" f\u00fcr die Textwahl verwendet", 
            "title": "config.json"
        }, 
        {
            "location": "/data/#areasjson", 
            "text": "In areas.json werden die Positionen und Dimensionen der Elemente auf der Karte und in den Geb\u00e4uden definiert. Sie ist so angelegt, dass F\u00fchrungen f\u00fcr mehrere verschiedene Orte abseits der Frankeschen Stiftungen angelegt werden k\u00f6nnen. F\u00fcr die App der Frankeschen Stiftung wird die Area mit dem Key  \"frankesche_stiftung\"  verwendet.  F\u00fcr die Zuordnung von Tour Elementen (z.B. das Geb\u00e4ude \"Waisenhaus\" mit der id \"waisenhaus\") m\u00fcssen die ID in tours.json mit dem Key des Elements in areas.json \u00fcbereinstimmen. Der Name (\"name\") dient nur der eigenen erleichterten Zuordung.  Beispiel aus areas.json:  {\n     waisenhaus : {\n         name :  Geb\u00e4ude Waisenhaus ,\n         boundingBox : {\n             left :  6.2317% ,\n             top :  76.5919% ,\n             width :  10.918% ,\n             height :  5.6255% \n        },\n         svg :  ./assets/svg/waisenhaus/waisenhaus_aussen.svg ,\n         floor1 : {\n             name :  1. Stockwerk ,\n             boundingBox : {\n                   left :  0% ,\n                   top :  0% ,\n                   width :  100% ,\n                   height :  100% \n            },\n             svg  :  ... \n        }\n    }\n}  Entsprechend in tours.json:  {\n     content : [\n        {\n             id :  waisenhaus \n            ...\n        }\n    ]\n}  Die  boundingBox  Angaben beziehen sich immer relativ auf die Dimension des Elementes, in dem sie sich befinden.", 
            "title": "areas.json"
        }, 
        {
            "location": "/data/#beaconsconfigjson", 
            "text": "Beacons Config beschreibt allgemeine sowie individuelle Beacon Einstellungen f\u00fcr die Bluetooth Beacons.  {\n   settings : {\n     scanRegions :  FDA50693-A4E2-4FB1-AFCF-C6EB07647825 ,\n     beaconMinValues : 2,\n     beaconMaxValues : 4,\n     beaconMaxAge : 10\n  },\n   beacons : {\n       FDA50693-A4E2-4FB1-AFCF-C6EB07647825:10:7 : {\n         triggerDistanceImmediate : -50,\n         triggerDistanceInner : -60,\n         triggerDistanceOuter : -67,\n         rssi : -59,\n         description :  beschreibung ,\n         batteryLife : 100,\n         boundingBox : {\n           top :  5% ,\n           left :  8% ,\n           width :  20% ,\n           height :  20% \n        }\n    }\n  }\n}   \"settings\" : {} - Beinhaltet allgemeine Einstellungen die alle Beacons und den Beacon Scan betreffen.  \"scanRegions\" : String - UUID der Scan Region f\u00fcr das Bluetooth Beacon Plugin (To Do: Ersetzen durch Array um mehrere Regionen zu erm\u00f6glichen.  \"beaconMinValues\" : int - minimale RSSI Werte die je Beacon empfangen worden sein, bevor der Durchschnitt verwendet wird  \"beaconMaxValues\" : int - maximale Anzahl an RSSI Werten, die gespeichert werden Sollten  \"beaconMaxAge\" : int - Maximales Alter der RSSI Werte in Sekunden, bevor der Wert gel\u00f6scht wird    \"beacons\" : {} - Beinhaltet die individuellen Beacon Einstellungen mit Trigger Werten mit einem Key   UUID:Major:Minor  \"triggerDistanceInner\" : float - Regul\u00e4rer Trigger Wert. \u00dcberschreitet der RSSI Wert (Achtung negative Werte) den Inner Radius wird er ausgl\u00f6st sofern kein anderer bereits aktiver Beacon besteht.  \"triggerDistanceOuter\" : float - Der Aktive Beacon bleibt solange Aktiv wie er diesen Wert \u00fcberschreitet  \"triggerDistanceImmediate\" : float - \u00dcberschreitet der RSSI Wert (Achtung negative Werte) des Beacons triggerDistanceImmediate wird er sofort ausgel\u00f6st (Ausnahme: Ein anderer bereits aktiver Beacon \u00fcberschreitet bereits den f\u00fcr ihn definierten immediate Wert)  \"rssi\" : int - Noch nicht implementiert - Su Fragen wof\u00fcr der Wert da ist  \"description\" : String - Beschreibung des Standortes zur Zuordnung  \"batteryLife\" : int - Aktueller Batteryzustand, wird noch nicht verwendet  \"boundingBox\" : {} - Angaben zum Standort des Beacons im Raum (f\u00fcr die Darstellung im CMS und ggf. im Debug Overlay der App)", 
            "title": "beaconsConfig.json"
        }, 
        {
            "location": "/data/#toursjson", 
            "text": "Touren werden in tour.json gespeichert (\u00e4nderbar in src/js/dataPath, App muss jedoch neu gebuildet werden) Jede Tour und jedes Element innerhalb der Tour ben\u00f6tigt eine einzigartige ID (\"id\" : String )   \"tours\" : [] - Array aus Tour Objekten  \"id\" : String - Unique Tour ID  \"language\" : String - ID der Sprache der Tour (vgl. config.json \"languages\"). Dient dem Filtern der Touren f\u00fcr die Sprachen in der UI  \"name\" : String - Titel der Tour  \"duration\" : String - Dauer der Tour  \"units\" : String - Zeitangabe (F\u00fcr die Aufsplittung im UI)  \"description\" : String - Beschreibung der Tour  \"beacons\" : {} : Enth\u00e4lt die f\u00fcr die Tour verwendeten Beacon UUID:Major:Minor Keys mit der ID des Elementes, welches sie aufrufen sollen  \"FDA50693-A4E2-4FB1-AFCF-C6EB07647825:10:7\" : {} - Beacon UUID:Major:Minor Key  \"elementID\": String - ID des Elementes, welches dieser Beacon ausl\u00f6st/\u00f6ffnet      \"content\" : [] - Array aus Geb\u00e4ude Objekten die dieser Tour zugeordnet sind.     {\n     tours : [\n        {\n             id :  tour1 ,\n             language :  de ,\n             name :  Historisches Waisenhaus ,\n             duration :  30 ,\n             units :  min ,\n             description :  Mit dem Bau des Halleschen Waisenhauses und der daran anschlie\u00dfenden Gesamtanlage rund um den heutigen Lindenhof hat sich August Hermann Francke in die Geschichte eingeschrieben. Innovationen in der Baukunst lie\u00dfen eine Architektursprache entstehen, die funktional, vielseitig nutzbar und wegweisend f\u00fcr die Entwicklung der Bildungs- und Sozialarchitektur war. ,\n             beacons : {\n                 FDA50693-A4E2-4FB1-AFCF-C6EB07647825:10:7 : {\n                     elementID :  raum2 \n                },\n                 FDA50693-A4E2-4FB1-AFCF-C6EB07647825:20:2 : {\n                     elementID :  schrank \n                }\n            },\n             content : [\n                {}\n            ]\n        }\n    ]\n}  Insgesamt werden die Inhalte der Tour-Struktur entsprechend ineinander verschachtelt. Die Struktur ist wie folgt:   Tour  Geb\u00e4ude  Stockwerk  Raum  Navigationselement und/oder  Exponat  Kapitel             Jedes Element muss \u00fcber einen \"content\" Key verf\u00fcgen, der ein Array an Objekten enth\u00e4lt.  \"id\" : \"irgendeinObjekt\",\n\"content\" :\n[\n    {\n        ... Kind Element\n    }\n]  Das Aufrufen und Aktivieren von Elementen wird durch ein Abgleichen der id mit dem gew\u00e4hlten Element gehandhabt.", 
            "title": "tours.json"
        }, 
        {
            "location": "/data/#definition-von-elementen-in-raume", 
            "text": "R\u00e4ume k\u00f6nnen Exponate oder Navigationselemente beinhalten. Exponate werden dargestellt durch die in der config.json f\u00fcr \"exhibit\" definierten SVG, wogegen die Darstellung von Navigationselementen frei und sogar optional ist. Sie k\u00f6nnen auch nur als unsichtbare Trigger dienen, um andere Elemente zu aktivieren, z.B. um den n\u00e4chsten oder vorherigen Raum aufzurufen oder das Stockwerk zu wechseln.", 
            "title": "Definition von Elementen in R\u00e4ume"
        }, 
        {
            "location": "/data/#exhibit", 
            "text": "\"type\" : \"exhibit\"  - definiert ein Exponat, dargestellt durch einen Kreis   Beispiel  {\n  \"type\": \"exhibit\",\n  \"id\": \"schrank2\",\n  \"name\": \"Schrank2\",\n  \"previewImage\": \"assets/previews/schrank.png\",\n  \"content\": [\n    {\n      \"type\": \"chapter\",\n      \"id\": \"chapter3\",\n      \"title\": \"track0\",\n      \"audio\": \"./assets/track0.mp3\",\n      \"timeline\": [],\n      \"text\": \"Lorem...\"\n    }\n  ]\n}", 
            "title": "Exhibit"
        }, 
        {
            "location": "/data/#chapter", 
            "text": "Grunds\u00e4tzlich sollte jedes Exponat mindestens ein Kapitel beinhalten. Dabei gibt es zwei Typen:   \"type\" : \"chapter\"  - wird als regul\u00e4res Kapitel behandelt  \"type\" : \"additional\"  - markiert Zusatzinhalte   Beispiel  [\n    {\n      \"type\": \"chapter\",\n      \"id\": \"chapter1\",\n      \"title\": \"track0\",\n      \"audio\": \"./assets/track0.mp3\",\n      \"timeline\": [\n        {\n          \"from\": 0.2,\n          \"to\" : 0.5,\n          \"type\": \"image\",\n          \"src\" : \"./assets/Francke.jpg\"\n        }],\n      \"text\": \"Lorem...\"\n    },\n    {\n      \"type\": \"additional\",\n      \"id\": \"chapter2\",\n      \"title\": \"track1 (additional content)\",\n      \"audio\": \"./assets/track2.mp3\",\n      \"timeline\": [],\n      \"text\": \"Lorem...\"\n    }\n]", 
            "title": "Chapter"
        }, 
        {
            "location": "/data/#navigation", 
            "text": "\"type\" : \"navigation\"  - definiert ein Navigationselement. Navigationselemente k\u00f6nnen durch anklicken/antippen nie direkt selbst aktiviert werden. Sie k\u00f6nnen nur die Aktivierung anderer Elemente ausl\u00f6sen, wenn \"activateOnClick\" mit einer existierenden ID definiert ist oder aktiv werden, wenn sie durch \"weiter\" oder \"zur\u00fcck\" aufgerufen werden und \"canBeActive\" nicht  false  ist.   \"boundingBox\" : {}  wird hier (im Gegensatz zu Exhibit Elementen) tourspefizisch definiert, da die Navigation je Tour unterschiedlich ausfallen kann (m\u00f6glicherweise w\u00e4re es sinnvoll eine boundingBox definition optional anzubieten, wenn es dann jeweils auch eine \"id\" gibt, die mit areas.json abgeglichen werden kann (im Falle von unsichtbaren Navigationselementen z.B., die f\u00fcr jede Tour gleich ist)  \"top\" : String  \"left\": String  \"width\": String  \"height\" : String    \"svg\" : String  - (optional) Pfad zu einer SVG Grafik die angezeigt werden soll  \"activateOnClick\" : String  - (optional) ID eines Elements welches bei einem Klick aktiviert werden soll (to do: rename)  \"canBeActive\" : bool  - (default: true) gibt an ob es bei \"weiter\" / \"zur\u00fcck\" aktiviert werden kann oder \u00fcbersprungen wird  \"alwaysVisible\" : bool  - (default: false) gibt an ob das Element immer sichtbar ist (sofern eine svg definiert wurde und der Raum aktiv ist)  \"audio\" : String  - (optional) erm\u00f6glicht das Abspielen einer Audio Datei ohne Media Player Overlay wenn das Element aktiv wird     Beispiel  {\n  \"type\": \"navigation\",\n  \"id\" : \"navigation2\",\n  \"svg\": \"./assets/svg/nav/nav_arrowLeft.svg\",\n  \"boundingBox\": {\n    \"top\": \"35%\",\n    \"left\": \"2%\",\n    \"width\": \"25%\",\n    \"height\": \"25%\"\n  },\n  \"activateOnClick\" : \"raum3\",\n  \"canBeActive\" : true,\n  \"alwaysVisible\" : false\n}", 
            "title": "Navigation"
        }, 
        {
            "location": "/data/#mogliche-backend-losungen", 
            "text": "Open Source Headless CMS:  https://github.com/directus/directus", 
            "title": "M\u00f6gliche Backend L\u00f6sungen"
        }, 
        {
            "location": "/data/#alternative-tour-struktur", 
            "text": "Lineare Tour Struktur (Next Aktiviert einfach das \"n\u00e4chste\" Element im Array bzw. das Element in der Tour mit der \"elementID\")  [\n    {\n         elementID  :  waisenhaus \n    },\n    {\n         elementID  :  floor1 \n    },\n    {\n         elementID  :  raum1 \n    },\n    {\n         elementID  :  exponat_1 \n    },\n    {\n         elementID  :  raum2_in_haus3 \n    },\n    {\n        ...\n    }\n]", 
            "title": "Alternative Tour Struktur"
        }, 
        {
            "location": "/BeaconSetup/", 
            "text": "Setup iBeacon\n\n\nUm ein neues iBeacon von Bytereal zu hochfahren und initialisieren, bracht man haupts\u00e4chlich zwei Schritten: Hardware initialisieren und mit App (Entweder Realkit oder Pluslabbeacon) die ansprechende Parameter einzustellen.\n\n\nHardware Initialisieren\n\n\n\n\nSchraub das Geh\u00e4use von dem iBeacon auseinandr.\n\n\nStecken Sie die Batterie (CR2477) ein.\n\n\nSchalten Sie die klein Schalter von \"OFF\" zu \"ON\"\n\n\nLegen Sie die Platinen wieder in dem Geh\u00e4use ein.\n\n\nSchraube Sie die Teile von Geh\u00e4use wieder zusammen.\n\n\n\n\nmit Realkit (iOS)\n\n\nSchritt 1: Laden App von App Store herunter\n\n\niOS version \nRealKit\n in Apple Appstore finden.\n\n\n\nSchritt 2: App starten\n\n\nRealkit App starten.\n\n\nMan steht die Liste von aller Beacons (Bluetooth Ger\u00e4ten) in der N\u00e4hr.\n\n\n\nSchritt 3: Mit einem Beacon verbinden\n\n\nW\u00e4hlen eine gew\u00fcnschte Ger\u00e4t.\n\n\nWenn Geheimzahl Popup Box auftaucht, dr\u00fcck \"Nein\". \n\n\n(Die default Geheimzahl ist \"000000\")\n\n\n\n\nSchritt 4: Basic Einstellungenen\n\n\nDie aufgelistete Artikel von hier entspricht nur f\u00fcr diese ausgew\u00e4hlte Ger\u00e4t.\n\n\nF\u00fcr ein neues Beacon soll man alle Basic Einstellungen durch einstellen.\nWenn man einen Artikel einstellen m\u00f6chte, soll man den entsprechenden Artikel dr\u00fccken, und in dem entweder popup box oder einer neuen Seite die gew\u00fcnschte parameter ausw\u00e4hlen / eingeben.\nF\u00fcr das Projekt von Franckesches Stiftungen:\n\n\n\n\nBroadcast Interval: 200ms\n\n\nmajor: nach Plannung\n\n\nminor: nach Plannung\n\n\nUUID: FDA50693-A4E2-4FB1-AFCF-C6EB07647825\n\n\n\n\n\n\nSchritt 5: Erweitere Einstellungen\n\n\nDie Bedienung von erweitere Einstellungen ist gleich wie Basic Einstellung.\n\n\nF\u00fcr das Projekt von Franckesches Stiftung, nur die folgende Artikel eingestellt werden (Die andere bleibt default):\n\n\n\n\n\n\n\n\nArtikel Name\n\n\nWert\n\n\nNotiz\n\n\n\n\n\n\n\n\n\n\n\n\nGer\u00e4t Name\n\n\n'major'-'minor'\n\n\nz.B. 20-1, Max.16 Chars\n\n\n\n\n\n\n\n\nBroadcast Interval\n\n\n200ms\n\n\n\n\n\n\n\n\n\n\nmajor\n\n\n-\n\n\nnach Gruppen\n\n\n\n\n\n\n\n\nminor\n\n\n-\n\n\njede ist einzigartig\n\n\n\n\n\n\n\n\n\n\nDie default Werte von Bytereal Beacon:\n\n\n\n\n\n\n\n\nArtikel Name\n\n\nWert\n\n\nNotiz\n\n\n\n\n\n\n\n\n\n\n\n\nMajor\n\n\n10\n\n\nrange: 0 - 65535\n\n\n\n\n\n\n\n\nMinor\n\n\n7\n\n\nrange: 0 - 65535\n\n\n\n\n\n\n\n\niBeacon UUID\n\n\nFDA50693-A4E2-4FB1\n-AFCF-C6EB07647825\n\n\n\n\n\n\n\n\n\n\nbroadcast Interval\n\n\n500ms\n\n\n\n\n\n\n\n\n\n\nbroadcast Name\n\n\nByteReal\n\n\nFirma Name\n\n\n\n\n\n\n\n\nDeploy Mode\n\n\nNein\n\n\n\n\n\n\n\n\n\n\nTx-Power\n\n\n0dbm / high\n\n\nRadio senden st\u00e4rke\n\n\n\n\n\n\n\n\nMeasure Power\n\n\n-59db\n\n\ngleich zu 1 meter\n\n\n\n\n\n\n\n\nLED\n\n\nAus\n\n\nWenn An, flacke das LED\n\n\n\n\n\n\n\n\n\n\n\n\nSchritt 6: Erweitere Einstellungen2 \n Reboot\n\n\nWenn Alle Einstellungen schon durch eingestellt werden. Soll man \"Speicher \n Restarten\" Taste Dr\u00fccken. Dadurch alle Einstellungen g\u00fcltig sein werden. Dieses Ger\u00e4t w\u00fcrde reboot mit neue eingestellte Parameteren.\n\n\nP.s. : Wenn \"Deploy Modus\" eingeschaltet wird, w\u00fcrde das Beacon nach Reboot nur \"connectable\" inner halb 3 Minuten, danach nicht mehr m\u00f6glich. Wenn man das Ger\u00e4t wieder einstellen m\u00f6chte, soll man das Beacon rebooten.\n\n\n\n\n\n\nmit Realkit (android)\n\n\nSchritt 1: App Install\n\n\nSuchen das Software Package \nrealkit 2.8.3.apk\n aus, und in Android Ger\u00e4t darauf dr\u00fccken, um die Software erst zu installieren.\n\n\nSchritt 2: App starten\n\n\nWenn die App startet, seht man die Liste von alle Beacons (Bluetooth Ger\u00e4t) in der N\u00e4hr.\n\n\n\n\nSchritt 3: Mit einem Beacon verbinden\n\n\nSuchen das gew\u00fcnschte Ger\u00e4t aus, und darauf dr\u00fcck.\n\n\nEs dauert eine kurze Weile bis das Beacon mit der Handy verbunden.\n\n\n\n\nSchritt 4: Basic Einstellungen\n\n\nIn der Basic Einstellung Tab soll man nur Major\nMinor, iBeacon UUID und Broadcast Interval einstellen. Die Parameteren sollte wie daoben die Beschreibung f\u00fcr iOS Platform identisch sein.\n\n\n\n\nMajor \n Minor Einstellung\n\n\n\n\nUUID Einstellung\n\n\n\n\nBroadcast Interval Einstellung\n\n\n\n\nSchritt 5: Erweitere Einstellungen\n\n\nIn erweitere Einstellungen soll man f\u00fcr eine neue Beacon nur \"Device Name\", \"Broadcastleistung\" einstellen. Alle andere Artikel bleiben wie es war. Die ganzen Parameter Einstellung Werte kann man aber in Schritt 5 f\u00fcr iOS Platform ausfinden.\n\n\nAm Ende soll man wieder \"Reboot Device\" Klicken. Nach der Reboot, alle eingestellte Wert w\u00fcrde erst g\u00fcltig sein.\n\n\nP.s. Das Detail von Deploy Modus bitte sehen Sie die Beschreibung in der Block f\u00fcr iOS Platform Einstellung.\n\n\n\n\n\n\nMit PluslabBeacon (android)\n\n\nEs gibt keine grundsatzlich Bedienung-Unterschied zwischen PluslabBeacon und Realkit. Das Workflow ist immer:\n\n\n\n\nGew\u00fcnschte Ger\u00e4t ausw\u00e4hlen\n\n\nUnterschiedliche Parameter einstellen\n\n\nReboot das Ger\u00e4t\n\n\n\n\nP.S. : Die Einstellungsm\u00f6glichkeiten von PluslabBeacon ist eingeschrankt, aber es reicht f\u00fcr alle Einstellungen von diesem Projekt aus. Ich (Su Gao) hat mit diesem App 83 iBeacons problemlos eingestellt. Die Android min. unterst\u00fctzte Version von dieser App is Android 4.3 (API:18).", 
            "title": "Beacon Setup"
        }, 
        {
            "location": "/BeaconSetup/#setup-ibeacon", 
            "text": "Um ein neues iBeacon von Bytereal zu hochfahren und initialisieren, bracht man haupts\u00e4chlich zwei Schritten: Hardware initialisieren und mit App (Entweder Realkit oder Pluslabbeacon) die ansprechende Parameter einzustellen.", 
            "title": "Setup iBeacon"
        }, 
        {
            "location": "/BeaconSetup/#hardware-initialisieren", 
            "text": "Schraub das Geh\u00e4use von dem iBeacon auseinandr.  Stecken Sie die Batterie (CR2477) ein.  Schalten Sie die klein Schalter von \"OFF\" zu \"ON\"  Legen Sie die Platinen wieder in dem Geh\u00e4use ein.  Schraube Sie die Teile von Geh\u00e4use wieder zusammen.", 
            "title": "Hardware Initialisieren"
        }, 
        {
            "location": "/BeaconSetup/#mit-realkit-ios", 
            "text": "", 
            "title": "mit Realkit (iOS)"
        }, 
        {
            "location": "/BeaconSetup/#schritt-1-laden-app-von-app-store-herunter", 
            "text": "iOS version  RealKit  in Apple Appstore finden.", 
            "title": "Schritt 1: Laden App von App Store herunter"
        }, 
        {
            "location": "/BeaconSetup/#schritt-2-app-starten", 
            "text": "Realkit App starten.  Man steht die Liste von aller Beacons (Bluetooth Ger\u00e4ten) in der N\u00e4hr.", 
            "title": "Schritt 2: App starten"
        }, 
        {
            "location": "/BeaconSetup/#schritt-3-mit-einem-beacon-verbinden", 
            "text": "W\u00e4hlen eine gew\u00fcnschte Ger\u00e4t.  Wenn Geheimzahl Popup Box auftaucht, dr\u00fcck \"Nein\".   (Die default Geheimzahl ist \"000000\")", 
            "title": "Schritt 3: Mit einem Beacon verbinden"
        }, 
        {
            "location": "/BeaconSetup/#schritt-4-basic-einstellungenen", 
            "text": "Die aufgelistete Artikel von hier entspricht nur f\u00fcr diese ausgew\u00e4hlte Ger\u00e4t.  F\u00fcr ein neues Beacon soll man alle Basic Einstellungen durch einstellen.\nWenn man einen Artikel einstellen m\u00f6chte, soll man den entsprechenden Artikel dr\u00fccken, und in dem entweder popup box oder einer neuen Seite die gew\u00fcnschte parameter ausw\u00e4hlen / eingeben.\nF\u00fcr das Projekt von Franckesches Stiftungen:   Broadcast Interval: 200ms  major: nach Plannung  minor: nach Plannung  UUID: FDA50693-A4E2-4FB1-AFCF-C6EB07647825", 
            "title": "Schritt 4: Basic Einstellungenen"
        }, 
        {
            "location": "/BeaconSetup/#schritt-5-erweitere-einstellungen", 
            "text": "Die Bedienung von erweitere Einstellungen ist gleich wie Basic Einstellung.  F\u00fcr das Projekt von Franckesches Stiftung, nur die folgende Artikel eingestellt werden (Die andere bleibt default):     Artikel Name  Wert  Notiz       Ger\u00e4t Name  'major'-'minor'  z.B. 20-1, Max.16 Chars     Broadcast Interval  200ms      major  -  nach Gruppen     minor  -  jede ist einzigartig      Die default Werte von Bytereal Beacon:     Artikel Name  Wert  Notiz       Major  10  range: 0 - 65535     Minor  7  range: 0 - 65535     iBeacon UUID  FDA50693-A4E2-4FB1 -AFCF-C6EB07647825      broadcast Interval  500ms      broadcast Name  ByteReal  Firma Name     Deploy Mode  Nein      Tx-Power  0dbm / high  Radio senden st\u00e4rke     Measure Power  -59db  gleich zu 1 meter     LED  Aus  Wenn An, flacke das LED", 
            "title": "Schritt 5: Erweitere Einstellungen"
        }, 
        {
            "location": "/BeaconSetup/#schritt-6-erweitere-einstellungen2-reboot", 
            "text": "Wenn Alle Einstellungen schon durch eingestellt werden. Soll man \"Speicher   Restarten\" Taste Dr\u00fccken. Dadurch alle Einstellungen g\u00fcltig sein werden. Dieses Ger\u00e4t w\u00fcrde reboot mit neue eingestellte Parameteren.  P.s. : Wenn \"Deploy Modus\" eingeschaltet wird, w\u00fcrde das Beacon nach Reboot nur \"connectable\" inner halb 3 Minuten, danach nicht mehr m\u00f6glich. Wenn man das Ger\u00e4t wieder einstellen m\u00f6chte, soll man das Beacon rebooten.", 
            "title": "Schritt 6: Erweitere Einstellungen2 &amp; Reboot"
        }, 
        {
            "location": "/BeaconSetup/#mit-realkit-android", 
            "text": "", 
            "title": "mit Realkit (android)"
        }, 
        {
            "location": "/BeaconSetup/#schritt-1-app-install", 
            "text": "Suchen das Software Package  realkit 2.8.3.apk  aus, und in Android Ger\u00e4t darauf dr\u00fccken, um die Software erst zu installieren.", 
            "title": "Schritt 1: App Install"
        }, 
        {
            "location": "/BeaconSetup/#schritt-2-app-starten_1", 
            "text": "Wenn die App startet, seht man die Liste von alle Beacons (Bluetooth Ger\u00e4t) in der N\u00e4hr.", 
            "title": "Schritt 2: App starten"
        }, 
        {
            "location": "/BeaconSetup/#schritt-3-mit-einem-beacon-verbinden_1", 
            "text": "Suchen das gew\u00fcnschte Ger\u00e4t aus, und darauf dr\u00fcck.  Es dauert eine kurze Weile bis das Beacon mit der Handy verbunden.", 
            "title": "Schritt 3: Mit einem Beacon verbinden"
        }, 
        {
            "location": "/BeaconSetup/#schritt-4-basic-einstellungen", 
            "text": "In der Basic Einstellung Tab soll man nur Major Minor, iBeacon UUID und Broadcast Interval einstellen. Die Parameteren sollte wie daoben die Beschreibung f\u00fcr iOS Platform identisch sein.   Major   Minor Einstellung   UUID Einstellung   Broadcast Interval Einstellung", 
            "title": "Schritt 4: Basic Einstellungen"
        }, 
        {
            "location": "/BeaconSetup/#schritt-5-erweitere-einstellungen_1", 
            "text": "In erweitere Einstellungen soll man f\u00fcr eine neue Beacon nur \"Device Name\", \"Broadcastleistung\" einstellen. Alle andere Artikel bleiben wie es war. Die ganzen Parameter Einstellung Werte kann man aber in Schritt 5 f\u00fcr iOS Platform ausfinden.  Am Ende soll man wieder \"Reboot Device\" Klicken. Nach der Reboot, alle eingestellte Wert w\u00fcrde erst g\u00fcltig sein.  P.s. Das Detail von Deploy Modus bitte sehen Sie die Beschreibung in der Block f\u00fcr iOS Platform Einstellung.", 
            "title": "Schritt 5: Erweitere Einstellungen"
        }, 
        {
            "location": "/BeaconSetup/#mit-pluslabbeacon-android", 
            "text": "Es gibt keine grundsatzlich Bedienung-Unterschied zwischen PluslabBeacon und Realkit. Das Workflow ist immer:   Gew\u00fcnschte Ger\u00e4t ausw\u00e4hlen  Unterschiedliche Parameter einstellen  Reboot das Ger\u00e4t   P.S. : Die Einstellungsm\u00f6glichkeiten von PluslabBeacon ist eingeschrankt, aber es reicht f\u00fcr alle Einstellungen von diesem Projekt aus. Ich (Su Gao) hat mit diesem App 83 iBeacons problemlos eingestellt. Die Android min. unterst\u00fctzte Version von dieser App is Android 4.3 (API:18).", 
            "title": "Mit PluslabBeacon (android)"
        }, 
        {
            "location": "/deploy/", 
            "text": "Building und Installation der App auf den Endger\u00e4ten\n\n\nIOS\n\n\n1. Log in \nhttp://developer.apple.com\n\n\n\n\n2. Add certification (developer) account into developer.apple.com\n\n\n\n\n3. Add developer account into xcode\n\n\n\n\n\n\n4. Open project in xcode\n\n\n\n\n5. Add App ID online\n\n\n\n\n6. Change permission\n\n\nOnce the ios platform is added to your project and built using cordova build, you can open it from within Xcode. Double-click to open the ${PROJECT_NAME}/platforms/ios/${PROJECT_NAME}.xcodeproj file.\n\n\nsource: https://cordova.apache.org/docs/en/latest/guide/platforms/ios/\n\n\nTroubleshooting \"cordova build\":\n\n\nwhen in compiling get error: compileC error (error code 65)\n\n\nsudo cordova platform remove ios\nsudo cordova platform add ios\nsudo cordova platform update ios\nsudo cordova build ios\n\n\n\n\n\n7. Change file permission\n\n\nRedirect to the target folder:\n\n\ncd platforms/ios\n\n\nChange all folder in this folder to fully read / write permission.\n\n\nfind . -type d -exec chmod 777 {} \\;\n\n\nChange all files in this folder to fully read / write permission.\n\n\nfind . -type f -exec chmod 777 {} \\;\n\n\n8. Customize App icon\n\n\n\n\nVisit \nhttps://makeappicon.com\n to generate all needed icon formats. (The output will be sent through email)\n\n\nUncompress the image package from Email and copy all files (include \nContents.json\n) into \n'projectRootDirectory'\n -\n \nplatforms\n -\n \nios\n -\n \n'projectName'\n -\n \nImages.xcassets\n -\n \nAppIcon.appiconset\n\n\n\n\n9. Customize App splash screen\n\n\n\n\nVisit \nhttp://zeppelindev.com/#splash\n to generate all needed splash screen images. \n'projectRootDirectory'\n -\n \nplatforms\n -\n \nios\n -\n \n'projectName'\n -\n \nImages.xcassets\n -\n \nLaunchImage.launchimage\n\n\nfor ios 9.* the picures' name from this website is different as the target names. So we need to manually change the name of each picture.\n\n\n\n\n10. Hide Status Bar\n\n\n\n\n\n\nAdd the following to Francke_AudioGuide-Info.plist:\n\n\nkey\nUIStatusBarHidden\n/key\n\n\ntrue/\n\n\nkey\nUIViewControllerBasedStatusBarAppearance\n/key\n\n\nfalse/\n\n- \n\n\n\n\n\n\n11. selecte actvie schema (which device)\n\n\n\n\n\n\n\n\nBuild (Play button)\n\n\n\n\n\n\n\n\n\n\n\n\n12. Finish", 
            "title": "How To Deploy"
        }, 
        {
            "location": "/deploy/#ios", 
            "text": "", 
            "title": "IOS"
        }, 
        {
            "location": "/deploy/#1-log-in-httpdeveloperapplecom", 
            "text": "", 
            "title": "1. Log in http://developer.apple.com"
        }, 
        {
            "location": "/deploy/#2-add-certification-developer-account-into-developerapplecom", 
            "text": "", 
            "title": "2. Add certification (developer) account into developer.apple.com"
        }, 
        {
            "location": "/deploy/#3-add-developer-account-into-xcode", 
            "text": "", 
            "title": "3. Add developer account into xcode"
        }, 
        {
            "location": "/deploy/#4-open-project-in-xcode", 
            "text": "", 
            "title": "4. Open project in xcode"
        }, 
        {
            "location": "/deploy/#5-add-app-id-online", 
            "text": "", 
            "title": "5. Add App ID online"
        }, 
        {
            "location": "/deploy/#6-change-permission", 
            "text": "Once the ios platform is added to your project and built using cordova build, you can open it from within Xcode. Double-click to open the ${PROJECT_NAME}/platforms/ios/${PROJECT_NAME}.xcodeproj file.  source: https://cordova.apache.org/docs/en/latest/guide/platforms/ios/  Troubleshooting \"cordova build\":  when in compiling get error: compileC error (error code 65)  sudo cordova platform remove ios\nsudo cordova platform add ios\nsudo cordova platform update ios\nsudo cordova build ios", 
            "title": "6. Change permission"
        }, 
        {
            "location": "/deploy/#7-change-file-permission", 
            "text": "Redirect to the target folder:  cd platforms/ios  Change all folder in this folder to fully read / write permission.  find . -type d -exec chmod 777 {} \\;  Change all files in this folder to fully read / write permission.  find . -type f -exec chmod 777 {} \\;", 
            "title": "7. Change file permission"
        }, 
        {
            "location": "/deploy/#8-customize-app-icon", 
            "text": "Visit  https://makeappicon.com  to generate all needed icon formats. (The output will be sent through email)  Uncompress the image package from Email and copy all files (include  Contents.json ) into  'projectRootDirectory'  -   platforms  -   ios  -   'projectName'  -   Images.xcassets  -   AppIcon.appiconset", 
            "title": "8. Customize App icon"
        }, 
        {
            "location": "/deploy/#9-customize-app-splash-screen", 
            "text": "Visit  http://zeppelindev.com/#splash  to generate all needed splash screen images.  'projectRootDirectory'  -   platforms  -   ios  -   'projectName'  -   Images.xcassets  -   LaunchImage.launchimage  for ios 9.* the picures' name from this website is different as the target names. So we need to manually change the name of each picture.", 
            "title": "9. Customize App splash screen"
        }, 
        {
            "location": "/deploy/#10-hide-status-bar", 
            "text": "Add the following to Francke_AudioGuide-Info.plist:  key UIStatusBarHidden /key  true/  key UIViewControllerBasedStatusBarAppearance /key  false/ \n-", 
            "title": "10. Hide Status Bar"
        }, 
        {
            "location": "/deploy/#11-selecte-actvie-schema-which-device", 
            "text": "Build (Play button)", 
            "title": "11. selecte actvie schema (which device)"
        }, 
        {
            "location": "/deploy/#12-finish", 
            "text": "", 
            "title": "12. Finish"
        }, 
        {
            "location": "/how_to_docs/", 
            "text": "For full documentation visit \nmkdocs.org\n.\n\n\nCommands\n\n\n\n\nmkdocs new [dir-name]\n - Create a new project.\n\n\nmkdocs serve\n - Start the live-reloading docs server.\n\n\nmkdocs build\n - Build the documentation site.\n\n\nmkdocs help\n - Print this help message.\n\n\n\n\nProject layout\n\n\nmkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.", 
            "title": "How To Docs"
        }, 
        {
            "location": "/how_to_docs/#commands", 
            "text": "mkdocs new [dir-name]  - Create a new project.  mkdocs serve  - Start the live-reloading docs server.  mkdocs build  - Build the documentation site.  mkdocs help  - Print this help message.", 
            "title": "Commands"
        }, 
        {
            "location": "/how_to_docs/#project-layout", 
            "text": "mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.", 
            "title": "Project layout"
        }, 
        {
            "location": "/BeaconScan&Sort/", 
            "text": "Beacon Scan\nSort\n\n\nBeacon Scan\nSort\n App kann alle available iBeacon Ger\u00e4t in der N\u00e4hr nach dem Signal St\u00e4rke auflisten und gegen die zus\u00e4tzliche Info aus \nbeacon.json\n eine Beacon Visualisierung darstellen.\n\n\n\n\nVisualisierung\n\n\nNearst\n: Die aktuell am n\u00e4chten gelegenden Beacon. Hier is beacon \u201e10:7\u201c.\n\n\nLocked\n: Die aktuell \u201eLocked\u201c Beacon. Das ist das Beacon als event schon getriggert und noch nicht frei gelassene Beacon. Hier is beacon \u201e30:3\u201c.\n\n\nInfo\n: Es beschreibt die lock zustand. Es k\u00f6nnt mehrere M\u00f6glichkeiten sein.\n\n\n\n\nentered: big x:y\n : innerhalb von der gro\u00dfen Kreis des Beacons.\n\n\nentered: small x:y\n : innerhalb von der kleinen Kreis des Beacons. (Es bedeutet, diese Beacon getriggeret ist)\n\n\nfree lock: big\n : Die Besucher hat die gro\u00dfe Kreis des Beacons verlassen. (Es bedeutet, die lock ist wieder frei gelassen)\n\n\nfree lock: small\n : Die Besucher hat die klein Kreis des Beacons verlassen. (Es bedeutet, die lock ist noch nicht freigelassen)\n\n\ndirect nearst: x:y\n : Trotzdem hat die Besucher noch nicht die Kreisen (egal ob es klein oder gro\u00df) von andere Beacon verlassen. Die \u201eabsolute trigger Kreis\u201c (Attribute Name: \ntriggerDistanceX\n) von dem am n\u00e4chsten gelegenen Beacon ist eingetreten. Und das Lock wird direct zu dem am n\u00e4chsten gelegenen Beacon \u00fcbergeben.\n\n\n\n\nGr\u00fcne \n Rot Kreis\n\n\n\n\nGr\u00fcne Kreis\n : Wenn irgend welche Beacon hat das Lock, w\u00fcrde die gr\u00fcne Kreis gr\u00fcne sein, wenn nei, die Farbe ist violet. Es ist auch die klein Kreis von diesem Beacon. (Hier ist Beacon 30:3, \u201e-61\u201c ist der Radius)\n\n\nRot Kreis\n : Die Puffer Gebiet zwischen kleine und gro\u00dfe Kreis. die au\u00dfere Radius ist die gro\u00dfe Kreis von diesem Beacon. (Hier ist Beacon 30:3, \u201e-70\u201c ist der Radius)\n\n\nZeiger\n : Es visualisiert die gelesene und gegl\u00e4ttete rssi Wert von diesem Beacon. (Hier ist Beacon 30:3, \u201e-68.33\u201c ist der gelesene Wert)\n\n\n\n\n\n\nStart \n Stop Taste\n\n\n\n\nStart Taste\n : Start Beacon Scanning.\n\n\nStop Taste\n : Stop Beacon Scanning.\n\n\n\n\nBeacon Liste\n\n\nEs w\u00fcrde alle available Beacons in der N\u00e4hr nach RSSI werte von gro\u00dfe nach klein aufgelistet.", 
            "title": "Beacon Scan&Sort"
        }, 
        {
            "location": "/BeaconScan&Sort/#beacon-scansort", 
            "text": "Beacon Scan Sort  App kann alle available iBeacon Ger\u00e4t in der N\u00e4hr nach dem Signal St\u00e4rke auflisten und gegen die zus\u00e4tzliche Info aus  beacon.json  eine Beacon Visualisierung darstellen.", 
            "title": "Beacon Scan&amp;Sort"
        }, 
        {
            "location": "/BeaconScan&Sort/#visualisierung", 
            "text": "Nearst : Die aktuell am n\u00e4chten gelegenden Beacon. Hier is beacon \u201e10:7\u201c.  Locked : Die aktuell \u201eLocked\u201c Beacon. Das ist das Beacon als event schon getriggert und noch nicht frei gelassene Beacon. Hier is beacon \u201e30:3\u201c.  Info : Es beschreibt die lock zustand. Es k\u00f6nnt mehrere M\u00f6glichkeiten sein.   entered: big x:y  : innerhalb von der gro\u00dfen Kreis des Beacons.  entered: small x:y  : innerhalb von der kleinen Kreis des Beacons. (Es bedeutet, diese Beacon getriggeret ist)  free lock: big  : Die Besucher hat die gro\u00dfe Kreis des Beacons verlassen. (Es bedeutet, die lock ist wieder frei gelassen)  free lock: small  : Die Besucher hat die klein Kreis des Beacons verlassen. (Es bedeutet, die lock ist noch nicht freigelassen)  direct nearst: x:y  : Trotzdem hat die Besucher noch nicht die Kreisen (egal ob es klein oder gro\u00df) von andere Beacon verlassen. Die \u201eabsolute trigger Kreis\u201c (Attribute Name:  triggerDistanceX ) von dem am n\u00e4chsten gelegenen Beacon ist eingetreten. Und das Lock wird direct zu dem am n\u00e4chsten gelegenen Beacon \u00fcbergeben.   Gr\u00fcne   Rot Kreis   Gr\u00fcne Kreis  : Wenn irgend welche Beacon hat das Lock, w\u00fcrde die gr\u00fcne Kreis gr\u00fcne sein, wenn nei, die Farbe ist violet. Es ist auch die klein Kreis von diesem Beacon. (Hier ist Beacon 30:3, \u201e-61\u201c ist der Radius)  Rot Kreis  : Die Puffer Gebiet zwischen kleine und gro\u00dfe Kreis. die au\u00dfere Radius ist die gro\u00dfe Kreis von diesem Beacon. (Hier ist Beacon 30:3, \u201e-70\u201c ist der Radius)  Zeiger  : Es visualisiert die gelesene und gegl\u00e4ttete rssi Wert von diesem Beacon. (Hier ist Beacon 30:3, \u201e-68.33\u201c ist der gelesene Wert)    Start   Stop Taste   Start Taste  : Start Beacon Scanning.  Stop Taste  : Stop Beacon Scanning.   Beacon Liste  Es w\u00fcrde alle available Beacons in der N\u00e4hr nach RSSI werte von gro\u00dfe nach klein aufgelistet.", 
            "title": "Visualisierung"
        }
    ]
}